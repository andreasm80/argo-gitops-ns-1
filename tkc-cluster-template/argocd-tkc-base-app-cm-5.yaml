# These are all the ArgoCD applocations that need to be executed on the workload cluster. Add/modify as needed. Change the name of the CM as needed
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  labels:
    app.kubernetes.io/name: argocd-tkc-1-base-app-configmap
    app.kubernetes.io/part-of: argocd
  name: argocd-tkc-1-base-app-configmap
data:
  argocd-tkc-addons.template.yaml: |
    apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: tkc-addons-${CLUSTER_NAME}-gatekeeper
    spec:
      project: default
      source:
        repoURL: 'https://github.com/andreasm80/argo-gitops-ns-1.git'
        path: tkc-cluster-1/applications/gatekeeper-tkc-1
        targetRevision: HEAD       
      destination:
        server: ${CLUSTER_IP}
      syncPolicy:
        automated:
          prune: true
    ---
    apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: tkc-addons-${CLUSTER_NAME}-nfs
    spec:
      project: default
      source:
        repoURL: 'https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner'
        chart: nfs-subdir-external-provisioner
        targetRevision: 4.0.18
        helm:
          parameters:
          - name: 'nfs.server'
            value: '172.18.3.23'
          - name: 'nfs.path'
            value: '/mnt/Pool1/Kubernetes/tanzu'
          - name: 'storageClass.reclaimPolicy'
            value: 'Retain'
          values: |
            securityContext:
              runAsNonRoot: true
              runAsGroup: 1000
              readOnlyRootFilesystem: false
              runAsUser: 1000
              seccompProfile:
                type: 'RuntimeDefault'
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
      destination:
        server: ${CLUSTER_IP}
        namespace: nfs-storage
      syncPolicy:
        automated:
          prune: true
          allowEmpty: true
    ---
    apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: tkc-addons-${CLUSTER_NAME}-ako
    spec:
      project: default
      sources:
      - repoURL: 'projects.registry.vmware.com/ako/helm-charts'
        chart: ako
        targetRevision: 1.11.3
        helm:
          values: |
            featureGates:
              GatewayAPI: false

            replicaCount: 1

            image:
              repository: projects.registry.vmware.com/ako/ako
              pullPolicy: IfNotPresent
              pullSecrets: []

            GatewayAPI:
              image:
                repository: projects.registry.vmware.com/ako/ako-gateway-api
                pullPolicy: IfNotPresent

            AKOSettings:
              primaryInstance: true
              enableEvents: 'true'
              logLevel: WARN
              fullSyncFrequency: '1800'
              apiServerPort: 8080
              deleteConfig: 'false'
              disableStaticRouteSync: 'false'
              clusterName: 'tkc-cluster-1'
              cniPlugin: 'antrea'
              enableEVH: false
              layer7Only: true
              namespaceSelector:
                labelKey: ''
                labelValue: ''
              servicesAPI: false
              vipPerNamespace: 'false'
              istioEnabled: false
              blockedNamespaceList: []
              ipFamily: ''
              useDefaultSecretsOnly: 'false'
            NetworkSettings:
              nodeNetworkList: []
              enableRHI: false
              nsxtT1LR: '/infra/tier-1s/tier-1'
              bgpPeerLabels: []
              vipNetworkList:
                - networkName: 'vip-l7'
                  cidr: '10.141.1.0/24'
            L7Settings:
              defaultIngController: 'true'
              noPGForSNI: false
              serviceType: NodePortLocal
              shardVSSize: SMALL
              passthroughShardSize: SMALL
              enableMCI: 'false'

            L4Settings:
              defaultDomain: ''
              autoFQDN: default

            ControllerSettings:
              serviceEngineGroupName: domain-c1006:5de34cdc-8b14-46a3-b1c9-b627d574cdf0
              controllerVersion: '22.1.5'
              cloudName: nsx-t
              controllerHost: '172.18.5.51'
              tenantName: admin

            nodePortSelector:
              key: ''
              value: ''

            resources:
              limits:
                cpu: 350m
                memory: 400Mi
              requests:
                cpu: 200m
                memory: 300Mi

            securityContext:
              runAsNonRoot: true
              runAsGroup: 1000
              readOnlyRootFilesystem: false
              runAsUser: 1000
              seccompProfile:
                type: 'RuntimeDefault'
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL

            podSecurityContext: {}

            rbac:
              pspEnable: false


            avicredentials:
              username: ''
              password: ''
              authtoken:
              certificateAuthorityData:


            persistentVolumeClaim: ''
            mountPath: /log
            logFile: avi.log
            akoGatewayLogFile: avi-gw.log
      destination:
        server: ${CLUSTER_IP}
        namespace: avi-system
      syncPolicy:
        automated:
          prune: true
          allowEmpty: true
      ignoreDifferences:
      - group: ""
        kind: Secret
        name: avi-secret
        namespace: avi-system
        jsonPointers:
        - /data/password
        - /data/username
        - /metadata/labels
    ---
    apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: tkc-addons-${CLUSTER_NAME}-ako-post-config
    spec:
      project: default
      source:
        repoURL: 'https://github.com/andreasm80/argo-gitops-ns-1.git'
        path: tkc-cluster-1/applications/foundational/ako/
        targetRevision: HEAD
      destination:
        server: ${CLUSTER_IP}
      syncPolicy:
        automated:
          prune: true
    ---
    # add more apps as needed
